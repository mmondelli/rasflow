#!/bin/bash

r=${1}
#s1=${2}
#s2=${3}
g=${2}
c=${3}
t=${4}
csv=${5}
db=${6}

if [ $# != 6 ]; then
	#echo "***ERROR*** Use: $0 <ref> <1> <2> <gtf> <cores> <option> <csv> <database>"
	echo "***ERROR*** Use: $0 <ref> <gtf> <cores> <option> <csv> <database>"
	exit -1
fi

source ../env_loss

SQLITE_CMD="sqlite3 $db"
runid_db=$(echo "select script_run_id from script_run order by start_time desc limit 1;" | $SQLITE_CMD)

#Executa o script
echo -e "\n# Execução $i ------------------------------------------ \n"
#{ time swift loss_all.swift -ref=$r -gtf=$g -op=$t -p=$c -input=$csv; } 2>>time.txt
runid=$(ls -t | grep run | head -1 ) #| cut -c1-6)
echo '- Run: ' $runid

#Importa proveniência do último run gerado
echo -e "\n# Importação  proveniencia --------------------------- \n"
swiftlog -import-provenance $runid

#Importa log
echo -e "\n# Importacao do log ------------------------------------ \n"
echo "- Run id: " $runid_db 
#log_extractor $db $runid_db >> domain_extractor.out

#Importa vcf
echo -e "\n# Importacao do arquivo vcf  --------------------------- \n"
dir=$(ls -al | grep "^d" | grep GATK | awk '{print $9}';)

for i in $dir
do
	echo "- Diretorio: " $i
	final=$(ls $i/*FINAL.vcf)
	echo "- Final vcf: " $final
	#vcf_extractor $db $final >> domain_extractor.out
done

#Importa gff
echo -e "\n# Importacao do arquivo gff ---------------------------- \n"
echo "- GFF: " $g
gff_extractor $db $g $runid_db >> domain_extractor.out

#Importa csv
echo -e "\n# Importacao do csv de entrada ------------------------- \n"
echo "- CSV: " $csv
csv_extractor $db $runid_db $csv >> domain_extractor.out

